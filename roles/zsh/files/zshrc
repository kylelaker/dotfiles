# Path to your oh-my-zsh installation.
source /etc/profile
export ZSH=~/.oh-my-zsh

if [[ "$ASCIINEMA_REC" == 1 ]]; then
    PS1="recording > "
fi

bindkey -v

# oh-my-zsh settings
ZSH_THEME="agnoster"
CASE_SENSITIVE="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Plugins
if [[ "$(uname -s)" == "Linux" ]]; then
    plugins=(git sudo zsh-syntax-highlighting)
else
    plugins=(git osx sudo)
fi

# User configuration

export PATH="$HOME/.local/bin:$PATH"
export MANPATH="$HOME/.local/share/man:/usr/local/man:$MANPATH"

# Ruby Gems
if which ruby &> /dev/null; then
  export PATH="$(ruby -e "puts Gem.user_dir")/bin:$PATH"
fi

source $ZSH/oh-my-zsh.sh

# Prevent to_source from leaking out of the rc file. For each file, checks if
# it exists and if it does, source it.
function () {
    local to_source=("$HOME/.zsh_functions" \
        "/usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" \
        "/usr/share/doc/pkgfile/command-not-found.zsh" \
        "/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" \
        "/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh")

    for file in "$to_source[@]"; do
        if [ -f "$file" ]; then
            source "$file"
        fi
    done

    local path_dirs=("$HOME/.cargo/bin" \
        "$HOME/.npm-packages/bin" \
        "$HOME/.nimble/bin" \
        "$HOME/.poetry/bin")

    for dir in "$path_dirs[@]"; do
        if [ -d "$dir" ]; then
            export PATH="$dir:$PATH"
        fi
    done

    # set up pyenv when installed
    pyenv_dir="$HOME/.pyenv"
    if [ -d "$pyenv_dir" ]; then
        export PATH="${pyenv_dir}/bin:$PATH"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
    fi

    NPM_PACKAGES="${HOME}/.npm-packages"
    export MANPATH="$NPM_PACKAGES/share/man:$MANPATH"
}

# Solarized theme on the TTY
if [ "$TERM" = "linux" ]; then
    echo -en "\e]PB657b83" # S_base00
    echo -en "\e]PA586e75" # S_base01
    echo -en "\e]P0073642" # S_base02
    echo -en "\e]P62aa198" # S_cyan
    echo -en "\e]P8002b36" # S_base03
    echo -en "\e]P2859900" # S_green
    echo -en "\e]P5d33682" # S_magenta
    echo -en "\e]P1dc322f" # S_red
    echo -en "\e]PC839496" # S_base0
    echo -en "\e]PE93a1a1" # S_base1
    echo -en "\e]P9cb4b16" # S_orange
    echo -en "\e]P7eee8d5" # S_base2
    echo -en "\e]P4268bd2" # S_blue
    echo -en "\e]P3b58900" # S_yellow
    echo -en "\e]PFfdf6e3" # S_base3
    echo -en "\e]PD6c71c4" # S_violet
    clear # against bg artifacts
fi

# Aliases
alias cdgit='cd "$(git rev-parse --show-toplevel)"'

# Make nvim all the things if it exists otherwise
# vim 5ever
if which nvim &> /dev/null; then
    export EDITOR='nvim'
    alias nano='nvim'
    alias vi='nvim'
    alias vim='nvim'
else
    export EDITOR='vim'
    alias nano='vim'
    alias vi='vim'
fi

# Use htop instead of top when available
if which htop &> /dev/null; then
    alias top='htop'
fi

alias :q='exit'
function mkcd() {
    mkdir "$@" && cd "$_"
}

# Creates a Python package with an empty __init__.py file
function mkpypkg() {
    mkdir "$@" && touch "$_/__init__.py"
}

function syncwatch() {
    watch -n0.5 grep -e Dirty: -e Writeback: /proc/meminfo
}

export BROWSER=firefox
export GPG_TTY=$(tty)

function dad_joke () {
    curl -sL https://icanhazdadjoke.com | \
        cowsay -f "$HOME/.local/share/cowsay/cows/dragon-and-cow.cow"
}

# Fun thing on JMU CS Student Server.
if [[ "$(hostname)" == "student" ]]; then
    dad_joke
fi

if [ -f "$HOME/.zsh_functions" ]; then
    source "$HOME/.zsh_functions"
fi

# Automatically set some variables for wayland and execute it on TTY on my
# laptop
if [[ exists "sway" && "$(hostname)" == "wilson" && "$TTY" == "/dev/tty1" ]]; then
    #export XDG_SESSION_TYPE="wayland"
    export GDK_BACKEND="wayland"
    export CLUTTER_BACKEND="wayland"
    export _JAVA_AWT_WM_NONREPARENTING=1
    export QT_QPA_PLATFORM="wayland-egl"
    export QT_WAYLAND_FORCE_DPI="physical"

    # Immediately launch sway at this point
    exec sway
fi

# sdkman is used for installing Kotlin. Clean up the nasty stuff they require
# in .zshrc
if [[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]]; then
    export SDKMAN_DIR="${HOME}/.sdkman"
    source "${SDKMAN_DIR}/bin/sdkman-init.sh"
fi
